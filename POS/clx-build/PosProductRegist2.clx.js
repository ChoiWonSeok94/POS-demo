/*
 * App URI: PosProductRegist2
 * Source Location: PosProductRegist2.clx
 *
 * This file was generated by eXBuilder6 compiler(1.0.4878), Don't edit manually.
 */
(function() {
	var app = new cpr.core.App("PosProductRegist2", { 
		onPrepare: function(loader) {
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports) {
			var linker = {};
			// Start - User Script
			/************************************************
			 * POSProductRegist2.js
			 * Created at 2024. 1. 21. 오후 10:39:49.
			 *
			 * @author sunrise
			 ************************************************/


			/*
			 * 서치 인풋에서 value-change 이벤트 발생 시 호출.
			 * SearchInput의 value를 변경하여 변경된 값이 저장된 후에 발생하는 이벤트.
			 */
			//function onSearchInputValueChange(e){
			//	var searchInput = app.lookup("srcAccount").value;
			//	var submission = new cpr.protocols.Submission();
			//	submission.action = '/POS/clientSearch.do';
			//	submission.responseType = 'text';
			//	submission.async = false;
			//	submission.setParameters("CLIENT_NM", searchInput);
			//	submission.send();
			//	
			//	var grd1 = app.lookup("grd1");
			//	grd1.redraw();
			//	
			//	console.log(searchInput);
			//	
			//}


			/*
			 * "확 인" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick(e){
				var grd1 = app.lookup("grd1");
				window.opener.postMessage({
					CLIENT_NM : grd1.getCellValue(grd1.getSelectedRowIndex(), "CLIENT_NM")
					,CLIENT_NO : app.lookup("clientNo").value
				}, "*");
				// 선택된 거래처 명
			//	var grd1 = app.lookup("grd1").getSelectionData();
			//	console.log(grd1);
				window.close();
			}

			/*
			 * 루트 컨테이너에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(e){
				app.lookup("clientList").clear();
			}

			/*
			 * 서치 인풋에서 search 이벤트 발생 시 호출.
			 * Searchinput의 enter키 또는 검색버튼을 클릭하여 인풋의 값이 Search될때 발생하는 이벤트
			 */
			function onSrcAccountSearch(e){
				var srcAccount = app.lookup("srcAccount").value;
				app.lookup("clientList").clear();
				var submission = new cpr.protocols.Submission();
				submission.action = '/POS/srcClientByName.do';
				submission.responseType = 'javascript';
				submission.async = false;
				submission.setParameters("CLIENT_NM", srcAccount);
				submission.addEventListener("receive", function(e){
					var submi = e.control;
					var grd1 = app.lookup("grd1");
					var jsonObj = JSON.parse(submi.xhr.responseText);
					console.log('가져온 거래처 목록 = ' + submi.xhr.responseText);
					debugger
					if(jsonObj['clientList'].length != 0){
						var idNo = '';
						for(var i=0 ; i < jsonObj['clientList'].length ; i++){
							if(jsonObj['clientList'][i]['ID_NO'] !== ''){
								idNo = jsonObj['clientList'][i]['ID_NO'];
							}else{
								idNo = jsonObj['clientList'][i]['BUSI_NO'];
							}
							grd1.insertRowData(i, true, {
								CLIENT_NM : jsonObj['clientList'][i]['CLIENT_NM']
								,REPRES_NM : jsonObj['clientList'][i]['REPRES_NM']
								,ID_NO : idNo
							}, true);	
						}
					}else{
						alert('조회된 정보가 없습니다');
						app.lookup("clientList").clear();
						app.lookup("grd1").redraw();
					}
					
				});
				submission.send();
			}

			/*
			 * 그리드에서 cell-click 이벤트 발생 시 호출.
			 * Grid의 Cell 클릭시 발생하는 이벤트.
			 */
			function onGrd1CellClick(e){
				var grd1 = app.lookup("grd1");
				var submission = new cpr.protocols.Submission();
				submission.action = '/POS/srcClientByName.do';
				submission.responseType = 'javascript';
				submission.setParameters("CLIENT_NM", grd1.getCellValue(grd1.getSelectedRowIndex(), "CLIENT_NM"));
				submission.addEventListener("receive", function(e){
					var submi = e.control;
					var grd1 = app.lookup("grd1");
					var jsonObj = JSON.parse(submi.xhr.responseText);
					
					var clientNo = app.lookup("clientNo");
					clientNo.value = jsonObj['clientList'][0]['CLIENT_NO'];
					console.log(clientNo.value);
				})
				submission.send();
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("clientList");
			dataSet_1.parseData({
				"columns": [
					{"name": "CLIENT_NM"},
					{"name": "CLIENT_NO"},
					{"name": "REPRES_NM"},
					{"name": "ID_NO"}
				],
				"rows": [
					{"CLIENT_NM": "거래처 A"},
					{"CLIENT_NM": "거래처 B"},
					{"CLIENT_NM": "거래처 C"},
					{"CLIENT_NM": "거래처 D"},
					{"CLIENT_NM": "거래처 E"}
				]
			});
			app.register(dataSet_1);
			var dataMap_1 = new cpr.data.DataMap("CLIENT");
			dataMap_1.parseData({
				"columns" : [{"name": "CLIENT_NM"}]
			});
			app.register(dataMap_1);
			app.supportMedia("all and (min-width: 650px)", "new-screen2");
			app.supportMedia("all and (max-width: 649px)", "new-screen");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			var dataMapContext_1 = new cpr.bind.DataMapContext(app.lookup("CLIENT"));
			container.setBindContext(dataMapContext_1);
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var searchInput_1 = new cpr.controls.SearchInput("srcAccount");
			searchInput_1.placeholder = "거래처 명으로 검색하세요";
			if(typeof onSearchInputValueChange == "function") {
				searchInput_1.addEventListener("value-change", onSearchInputValueChange);
			}
			if(typeof onSrcAccountSearch == "function") {
				searchInput_1.addEventListener("search", onSrcAccountSearch);
			}
			container.addChild(searchInput_1, {
				"top": "75px",
				"left": "20px",
				"width": "610px",
				"height": "35px"
			});
			
			var output_1 = new cpr.controls.Output();
			output_1.value = "  거래처 검색";
			output_1.style.css({
				"border-bottom-color" : "#D0D0D0",
				"font-weight" : "bold",
				"border-bottom-width" : "4px",
				"font-size" : "20px",
				"border-bottom-style" : "solid"
			});
			container.addChild(output_1, {
				"top": "20px",
				"left": "20px",
				"width": "610px",
				"height": "45px"
			});
			
			var grid_1 = new cpr.controls.Grid("grd1");
			grid_1.init({
				"dataSet": app.lookup("clientList"),
				"showDeletedRow": false,
				"columns": [
					{"width": "177px"},
					{"width": "100px"},
					{"width": "100px"}
				],
				"header": {
					"rows": [{"height": "41px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.filterable = false;
								cell.sortable = false;
								cell.targetColumnName = "CLIENT_NM";
								cell.text = "거래처명";
								cell.style.css({
									"vertical-align" : "middle",
									"font-size" : "16px",
									"text-align" : "center"
								});
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.text = "대표자 성명";
								cell.style.css({
									"text-align" : "center"
								});
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
								cell.text = "주민/법인번호";
								cell.style.css({
									"text-align" : "center"
								});
							}
						}
					]
				},
				"detail": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.columnName = "CLIENT_NM";
								cell.style.css({
									"vertical-align" : "middle",
									"text-align" : "center"
								});
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.columnName = "REPRES_NM";
								cell.style.css({
									"text-align" : "center"
								});
								cell.control = (function(){
									var output_2 = new cpr.controls.Output();
									output_2.style.css({
										"text-align" : "center"
									});
									output_2.bind("value").toDataColumn("REPRES_NM");
									return output_2;
								})();
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
								cell.columnName = "ID_NO";
								cell.style.css({
									"text-align" : "center"
								});
								cell.control = (function(){
									var output_3 = new cpr.controls.Output();
									output_3.style.css({
										"text-align" : "center"
									});
									output_3.bind("value").toDataColumn("ID_NO");
									return output_3;
								})();
							}
						}
					]
				}
			});
			grid_1.bind("rowIndexerStartNum").toDataMap(app.lookup("CLIENT"), "CLIENT_NM");
			if(typeof onGrd1CellClick == "function") {
				grid_1.addEventListener("cell-click", onGrd1CellClick);
			}
			container.addChild(grid_1, {
				"top": "120px",
				"left": "20px",
				"width": "610px",
				"height": "525px"
			});
			
			var button_1 = new cpr.controls.Button();
			button_1.value = "확 인";
			if(typeof onButtonClick == "function") {
				button_1.addEventListener("click", onButtonClick);
			}
			container.addChild(button_1, {
				"top": "655px",
				"left": "290px",
				"width": "70px",
				"height": "25px"
			});
			
			var output_4 = new cpr.controls.Output("clientNo");
			output_4.visible = false;
			output_4.readOnly = true;
			container.addChild(output_4, {
				"top": "655px",
				"left": "20px",
				"width": "149px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "PosProductRegist2";
	cpr.core.Platform.INSTANCE.register(app);
})();
