/*
 * App URI: PosAccountManagement
 * Source Location: PosAccountManagement.clx
 *
 * This file was generated by eXBuilder6 compiler(1.0.4807), Don't edit manually.
 */
(function() {
	var app = new cpr.core.App("PosAccountManagement", { 
		onPrepare: function(loader) {
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports) {
			var linker = {};
			// Start - User Script
			/************************************************
			 * PosAccountManagement.js
			 * Created at 2024. 1. 22. 오전 12:13:02.
			 *
			 * @author PC2
			 ************************************************/

			function onBodyInit(e) {
			    // 다음에서 제공하는 통합로딩 url
			    var voResourceLoader = new cpr.core.ResourceLoader();
			    voResourceLoader.addScript("//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js").load().then(function(input) {
			        //후처리

			    });
			}

			function postCode() {
				new daum.Postcode({
					/* 해당 정보를 받아 처리할 콜백 함수를 정의하는 부분 입니다. */
					oncomplete: function(data) {
						/* 팝업에서 검색결과 항목을 클릭했을떄 실행할 코드를 작성하는 부분 */
						var vcPostCode = app.lookup("zip");
			//			var vcAddress = app.lookup("address");
						var vcAddressJibun = app.lookup("adr1");
						var vcDetailAddress = app.lookup("adr2");
			//			var vcExtraAddress = app.lookup("extraAddress");
						
						// 도로명 주소의 노출 규칙에 따라 주소를 표시한다.
						// 내려오는 변수가 값이 없는 경우엔 공백('')값을 가지므로, 이를 참고하여 분기 한다.
			//			var roadAddr = data.roadAddress; // 도로명 주소 변수
			//			var extraRoadAddr = ""; // 참고 항목 변수
						
						// 법정동명이 있을 경우 추가한다. (법정리는 제외)
						// 법정동의 경우 마지막 문자가 "동/로/가"로 끝난다.
			//			if (data.bname !== "" && /[동|로|가]$/g.test(data.bname)) {
			//				extraRoadAddr += data.bname;
			//			}
						// 건물명이 있고, 공동주택일 경우 추가한다.
			//			if (data.buildingName !== "" && data.apartment === "Y") {
			//				extraRoadAddr += (extraRoadAddr !== "" ? ", " + data.buildingName : data.buildingName);
			//			}
						// 표시할 참고항목이 있을 경우, 괄호까지 추가한 최종 문자열을 만든다.
			//			if (extraRoadAddr !== "") {
			//				extraRoadAddr = " (" + extraRoadAddr + ")";
			//			}
						
						// 우편번호와 주소 정보를 해당 필드에 넣는다.
						vcPostCode.value = data.zonecode;
			//			vcAddress.value = roadAddr;
						vcAddressJibun.value = data.jibunAddress;
						
						// 참고항목 문자열이 있을 경우 해당 필드에 넣는다.
			//			if (roadAddr !== "") {
			//				vcExtraAddress.value = extraRoadAddr;
			//			} else {
			//				vcExtraAddress.value = "";
			//			}
						
						/*커서를 상세주소 필드로 이동합니다. */
						vcDetailAddress.focus();
						
					}
					
				}).open();
			}

			/*
			 * "우편 검색" 버튼(btnClick)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnClickClick(e){
				postCode();
			}

			/*
			 * 루트 컨테이너에서 unload 이벤트 발생 시 호출.
			 * 앱이 언로드된 후 발생하는 이벤트입니다.
			 */
			function onBodyUnload(e){
				var appConf = cpr.core.AppConfig.INSTANCE;
				appConf.getEnvConfig().setValue("appcache", false);
			}
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("accountBtn");
			dataSet_1.parseData({
				"columns": [
					{"name": "person"},
					{"name": "value"}
				],
				"rows": [
					{"person": "개인", "value": "individual"},
					{"person": "법인", "value": "corporation"}
				]
			});
			app.register(dataSet_1);
			app.supportMedia("all", "default");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("ea1");
			cpr.core.App.load("PosHeader", function(app) {
				if(app){
					embeddedApp_1.app = app;
				}
			});
			container.addChild(embeddedApp_1, {
				"top": "0px",
				"left": "0px",
				"width": "1024px",
				"height": "80px"
			});
			
			var group_1 = new cpr.controls.Container();
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var output_1 = new cpr.controls.Output();
				output_1.value = "거래처 번호 :";
				output_1.style.css({
					"text-align" : "center"
				});
				container.addChild(output_1, {
					"top": "70px",
					"left": "353px",
					"width": "120px",
					"height": "40px"
				});
				var output_2 = new cpr.controls.Output();
				output_2.value = "등록된 거래처 +1 표출";
				container.addChild(output_2, {
					"top": "70px",
					"left": "483px",
					"width": "170px",
					"height": "40px"
				});
				var radioButton_1 = new cpr.controls.RadioButton("rdb1");
				(function(radioButton_1){
					radioButton_1.setItemSet(app.lookup("accountBtn"), {
						"label": "person",
						"value": "value"
					})
				})(radioButton_1);
				container.addChild(radioButton_1, {
					"top": "152px",
					"left": "153px",
					"width": "200px",
					"height": "40px"
				});
				var output_3 = new cpr.controls.Output();
				output_3.value = "거래처 명";
				output_3.style.css({
					"background-color" : "#EDEDED",
					"border-radius" : "5px 0px 0px 5px",
					"text-align" : "center"
				});
				container.addChild(output_3, {
					"top": "212px",
					"left": "120px",
					"width": "103px",
					"height": "40px"
				});
				var output_4 = new cpr.controls.Output();
				output_4.value = "사업자 번호";
				output_4.style.css({
					"background-color" : "#EDEDED",
					"border-radius" : "5px 0px 0px 5px",
					"text-align" : "center"
				});
				container.addChild(output_4, {
					"top": "272px",
					"left": "120px",
					"width": "103px",
					"height": "40px"
				});
				var output_5 = new cpr.controls.Output();
				output_5.value = "대표자 성명";
				output_5.style.css({
					"background-color" : "#EDEDED",
					"border-radius" : "5px 0px 0px 5px",
					"text-align" : "center"
				});
				container.addChild(output_5, {
					"top": "332px",
					"left": "120px",
					"width": "103px",
					"height": "40px"
				});
				var output_6 = new cpr.controls.Output();
				output_6.value = "주민번호";
				output_6.style.css({
					"background-color" : "#EDEDED",
					"border-radius" : "5px 0px 0px 5px",
					"text-align" : "center"
				});
				container.addChild(output_6, {
					"top": "392px",
					"left": "120px",
					"width": "103px",
					"height": "40px"
				});
				var inputBox_1 = new cpr.controls.InputBox("ipb1");
				inputBox_1.style.css({
					"border-radius" : "0px 5px 5px 0px"
				});
				container.addChild(inputBox_1, {
					"top": "212px",
					"left": "222px",
					"width": "200px",
					"height": "40px"
				});
				var inputBox_2 = new cpr.controls.InputBox("ipb2");
				inputBox_2.style.css({
					"border-radius" : "0px 5px 5px 0px"
				});
				container.addChild(inputBox_2, {
					"top": "272px",
					"left": "222px",
					"width": "200px",
					"height": "40px"
				});
				var inputBox_3 = new cpr.controls.InputBox("ipb3");
				inputBox_3.style.css({
					"border-radius" : "0px 5px 5px 0px"
				});
				container.addChild(inputBox_3, {
					"top": "332px",
					"left": "222px",
					"width": "200px",
					"height": "40px"
				});
				var inputBox_4 = new cpr.controls.InputBox("ipb4");
				inputBox_4.style.css({
					"border-radius" : "0px 5px 5px 0px"
				});
				container.addChild(inputBox_4, {
					"top": "392px",
					"left": "222px",
					"width": "200px",
					"height": "40px"
				});
				var output_7 = new cpr.controls.Output();
				output_7.value = "전화번호";
				output_7.style.css({
					"background-color" : "#EDEDED",
					"border-radius" : "5px 0px 0px 5px",
					"text-align" : "center"
				});
				container.addChild(output_7, {
					"top": "212px",
					"left": "483px",
					"width": "103px",
					"height": "40px"
				});
				var output_8 = new cpr.controls.Output();
				output_8.value = "우편번호";
				output_8.style.css({
					"background-color" : "#EDEDED",
					"border-radius" : "5px 0px 0px 5px",
					"text-align" : "center"
				});
				container.addChild(output_8, {
					"top": "272px",
					"left": "483px",
					"width": "103px",
					"height": "40px"
				});
				var output_9 = new cpr.controls.Output();
				output_9.value = "주소";
				output_9.style.css({
					"background-color" : "#EDEDED",
					"border-radius" : "5px 0px 0px 5px",
					"text-align" : "center"
				});
				container.addChild(output_9, {
					"top": "332px",
					"left": "483px",
					"width": "103px",
					"height": "40px"
				});
				var output_10 = new cpr.controls.Output();
				output_10.value = "상세주소";
				output_10.style.css({
					"background-color" : "#EDEDED",
					"border-radius" : "5px 0px 0px 5px",
					"text-align" : "center"
				});
				container.addChild(output_10, {
					"top": "392px",
					"left": "483px",
					"width": "103px",
					"height": "40px"
				});
				var inputBox_5 = new cpr.controls.InputBox("ipb5");
				inputBox_5.style.css({
					"border-radius" : "0px 5px 5px 0px"
				});
				container.addChild(inputBox_5, {
					"top": "212px",
					"left": "585px",
					"width": "200px",
					"height": "40px"
				});
				var inputBox_6 = new cpr.controls.InputBox("zip");
				inputBox_6.style.css({
					"border-radius" : "0px 5px 5px 0px"
				});
				container.addChild(inputBox_6, {
					"top": "272px",
					"left": "585px",
					"width": "200px",
					"height": "40px"
				});
				var inputBox_7 = new cpr.controls.InputBox("adr1");
				inputBox_7.style.css({
					"border-radius" : "0px 5px 5px 0px"
				});
				container.addChild(inputBox_7, {
					"top": "332px",
					"left": "585px",
					"width": "328px",
					"height": "40px"
				});
				var inputBox_8 = new cpr.controls.InputBox("adr2");
				inputBox_8.style.css({
					"border-radius" : "0px 5px 5px 0px"
				});
				container.addChild(inputBox_8, {
					"top": "392px",
					"left": "585px",
					"width": "328px",
					"height": "40px"
				});
				var output_11 = new cpr.controls.Output();
				output_11.value = "회원이름";
				output_11.style.css({
					"background-color" : "#EDEDED",
					"border-radius" : "5px 0px 0px 5px",
					"text-align" : "center"
				});
				container.addChild(output_11, {
					"top": "152px",
					"left": "483px",
					"width": "103px",
					"height": "40px"
				});
				var inputBox_9 = new cpr.controls.InputBox("ipb9");
				inputBox_9.style.css({
					"border-radius" : "0px 5px 5px 0px"
				});
				container.addChild(inputBox_9, {
					"top": "152px",
					"left": "585px",
					"width": "200px",
					"height": "40px"
				});
				var button_1 = new cpr.controls.Button();
				button_1.value = "등 록";
				button_1.style.css({
					"font-size" : "17px"
				});
				container.addChild(button_1, {
					"top": "494px",
					"left": "454px",
					"width": "100px",
					"height": "40px"
				});
				var button_2 = new cpr.controls.Button("btnClick");
				button_2.value = "우편 검색";
				if(typeof onBtnClickClick == "function") {
					button_2.addEventListener("click", onBtnClickClick);
				}
				container.addChild(button_2, {
					"top": "272px",
					"left": "795px",
					"width": "118px",
					"height": "40px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "150px",
				"left": "0px",
				"width": "1024px",
				"height": "598px"
			});
			
			var output_12 = new cpr.controls.Output("title");
			output_12.value = "거래처 관리";
			output_12.style.css({
				"font-weight" : "bold",
				"font-size" : "25px",
				"text-align" : "center"
			});
			container.addChild(output_12, {
				"top": "90px",
				"left": "353px",
				"width": "318px",
				"height": "50px"
			});
		}
	});
	app.title = "PosAccountManagement";
	cpr.core.Platform.INSTANCE.register(app);
})();
