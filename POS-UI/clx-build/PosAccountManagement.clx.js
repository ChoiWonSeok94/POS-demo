/*
 * App URI: PosAccountManagement
 * Source Location: PosAccountManagement.clx
 *
 * This file was generated by eXBuilder6 compiler(1.0.4878), Don't edit manually.
 */
(function() {
	var app = new cpr.core.App("PosAccountManagement", { 
		onPrepare: function(loader) {
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports) {
			var linker = {};
			// Start - User Script
			/************************************************
			 * PosAccountManagement.js
			 * Created at 2024. 1. 22. 오전 12:13:02.
			 *
			 * @author PC2
			 ************************************************/

			function onBodyInit(e) {
			    // 다음에서 제공하는 통합로딩 url
			    var voResourceLoader = new cpr.core.ResourceLoader();
			    voResourceLoader.addScript("//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js").load().then(function(input) {
			        //후처리

			    });
			//  var utilProperty = cpr.core.Module.require("ui/js/daumApi.module.js");
			//	var utilProperty = cpr.core.Module.require("module/js/daumApi.module.js");
			//	console.log(utilProperty.property1);
			//	var svg = app.lookup("accountForm");
			//  	var xmlns = "http://dmaps.daum.net/map_js_init/postcode.v2.js";
			//  	var svgElem = document.createElementNS(xmlns, "svg");
			//  	
			//  	svgElem.setAttributeNS(null, "width", "400px");
			//  	svgElem.setAttributeNS(null, "hight", "600px");
			//  	svgElem.setAttributeNS(null, "popup", "popup");
			}

			function postCode() {
				new daum.Postcode({
					/* 해당 정보를 받아 처리할 콜백 함수를 정의하는 부분 입니다. */
					oncomplete: function(data) {
						/* 팝업에서 검색결과 항목을 클릭했을떄 실행할 코드를 작성하는 부분 */
						var vcPostCode = app.lookup("POST_NO");
						var vcAddress = app.lookup("ADDR1");
			//			var vcAddressJibun = app.lookup("ADDR1");
						var vcDetailAddress = app.lookup("ADDR2");
						var vcExtraAddress = app.lookup("extraAddress");
						
						// 도로명 주소의 노출 규칙에 따라 주소를 표시한다.
						// 내려오는 변수가 값이 없는 경우엔 공백('')값을 가지므로, 이를 참고하여 분기 한다.
						var roadAddr = data.roadAddress; // 도로명 주소 변수
						var extraRoadAddr = ""; // 참고 항목 변수
						
						// 법정동명이 있을 경우 추가한다. (법정리는 제외)
						// 법정동의 경우 마지막 문자가 "동/로/가"로 끝난다.
						if (data.bname !== "" && /[동|로|가]$/g.test(data.bname)) {
							extraRoadAddr += data.bname;
						}
						// 건물명이 있고, 공동주택일 경우 추가한다.
						if (data.buildingName !== "" && data.apartment === "Y") {
							extraRoadAddr += (extraRoadAddr !== "" ? ", " + data.buildingName : data.buildingName);
						}
						// 표시할 참고항목이 있을 경우, 괄호까지 추가한 최종 문자열을 만든다.
						if (extraRoadAddr !== "") {
							extraRoadAddr = " (" + extraRoadAddr + ")";
						}
						
						// 참고항목 문자열이 있을 경우 해당 필드에 넣는다.
						if (roadAddr !== "") {
							roadAddr += extraRoadAddr;
						} else {
							vcExtraAddress.value = "";
						}
						
						// 우편번호와 주소 정보를 해당 필드에 넣는다.
						vcPostCode.value = data.zonecode;
						vcAddress.value = roadAddr;
			//			vcAddressJibun.value = data.jibunAddress;
						
						/*커서를 상세주소 필드로 이동합니다. */
						vcDetailAddress.focus();
						
					}
					
				}).open();
			}

			/*
			 * "우편 검색" 버튼(btnClick)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnClickClick(e){
				postCode();
			}

			/*
			 * 루트 컨테이너에서 unload 이벤트 발생 시 호출.
			 * 앱이 언로드된 후 발생하는 이벤트입니다.
			 */
			function onBodyUnload(e){
				var appConf = cpr.core.AppConfig.INSTANCE;
				appConf.getEnvConfig().setValue("appcache", false);
			}


			/*
			 * 루트 컨테이너에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(e){
				
				var scriptElement = document.createElement("script");
				var daumApi = "t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js";
				scriptElement.src = "http://" + daumApi;
				document.body.appendChild(scriptElement);
				
			    app.lookup("PERS_COP_TY").selectItem(0);
			    
			    var clientNo = app.lookup("CLIENT_NO");
				var submission = new cpr.protocols.Submission();
				submission.action = '/POS/clientPageInit.do';
				submission.responseType = 'javascript';
				submission.async = false;
				submission.addEventListener("receive", function(e){
					var submi = e.control.xhr.responseText;
					//총 거래처정보 반환된 값 세팅
					app.lookup("CLIENT_NO").value = JSON.parse(submission.xhr.responseText)['clientNo']['CLIENT_NO'];
				});
				submission.send();
				
			}

			// 등록 전 유효성검사
			function chkDupl(){
				
				var clientNm = app.lookup("CLIENT_NM");
				var busiNo = app.lookup("BUSI_NO");
				var idNo = app.lookup("ID_NO");
				var represNm = app.lookup("REPRES_NM");
				var phNo = app.lookup("PH_NO");
				var postNo = app.lookup("POST_NO");
				var addr1 = app.lookup("ADDR1");
				var addr2 = app.lookup("ADDR2");
				var idBusiOutput = app.lookup("idBusiOutput");
				
				// 한글에 자음이나 모음걸러내기 + 공백허용 정규식
				var clientTest = /^[가-힣A-z\s]+$/;
				// 연속된 공백이 있는지 확인하는 정규식
				var clientTest2 = /(\s)\1/;
				if(clientNm.value == '' || clientNm.length == 0){
					alert('거래처명을 입력해 주세요.');
					clientNm.focus();
					return false;
				}else if(!clientTest.test(clientNm.value) && clientNm.length > 0){
					alert('유효하지 않은 거래처 명 형식입니다.');
					clientNm.focus();
					return false;
				}else if(clientTest2.test(clientNm.value) && clientNm.length > 0){
					alert('연속된 공백은 불가합니다.');
					clientNm.focus();
					return false;
				}
				
				if(busiNo.value == '' || busiNo.length == 0){
					alert('사업자번호를 입력해 주세요.');
					busiNo.focus();
					return false;
				}else if(busiNo.length != 10 && busiNo.length > 0){
					alert('사업자번호가 올바르지 않습니다.');
					busiNo.focus();
					return false;
				}else if(busiNo.value.substr(0,3) !== '325' && busiNo.length > 0){
					alert('사업자번호가 유효하지 않습니다.');
					busiNo.focus();
					return false;
				}
				
				var represNmTest = /^[가-힣A-z]+$/;
				if(represNm.value == '' || represNm.length == 0){
					alert('대표자성명을 입력해 주세요.');
					represNm.focus();
					return false;
				}else if(!represNmTest.test(represNm.value) && represNm.length > 0){
					alert('유효하지 않은 대표자명 형식입니다.');
					represNm.focus();
					return false;
				}
				
				if(idBusiOutput.value == '주민번호'){
					if(idNo.value == '' || idNo.length == 0){
						alert('주민등록번호를 입력해 주세요');
						idNo.focus();
						return false;
						
					}else if(idNo.length != 13 && idNo.length > 0){
						alert('주민등록번호가 올바르지 않습니다.');
						idNo.focus();
						return false;
					}
			//		else if(주민번호 체크디지트){
			//			alert('주민등록번호가 유효하지 않습니다.');
			//			idNo.focus();
			//			return false;
			//		}
				}else if(idBusiOutput.value == '법인번호'){
					if(idNo.value == '' || idNo.length == 0){
						alert('법인등록번호를 입력해 주세요');
						idNo.focus();
						return false;
						
					}else if(idNo.length != 13 && idNo.length > 0){
						alert('법인등록번호가 올바르지 않습니다.');
						idNo.focus();
						return false;
					}else if(idNo.value.substr(0, 2) != '67'){
						alert('법인등록번호가 유효하지 않습니다.');
						idNo.focus();
						return false;
					}
			//		else if(법인번호 체크디지트(?)){
			//			alert('법인등록번호가 유효하지 않습니다.');
			//			idNo.focus();
			//			return false;
			//		}
				}
				var phNoTest = /^0\d{1,2}\d{3,4}\d{4}$/;
				if(phNo.value == '' || phNo.length == 0){
					alert('전화번호를 입력해 주세요.');
					phNo.focus();
					return false;
				
				}else if(!phNoTest.test(phNo.value)){
					alert('유효하지 않은 전화번호 형식입니다.');
					phNo.focus();
					return false;
				}
				
				if(postNo.value == '' || postNo.length == 0){
					alert('우편번호를 검색해 주세요.');
					return false;
				}else if(postNo.value != '' && addr2.value == ''){
					alert('상세주소를 입력해 주세요.');
					addr2.focus();
					return false;
				}else if(clientTest.test(postNo.value) && postNo.length > 0){
					alert('유효하지 않은 상세주소 형식입니다.');
					addr2.focus();
					return false;
				}else if(clientTest2.test(postNo.value) && postNo.length > 0){
					alert('연속된 공백은 불가합니다.');
					addr2.focus();
					return false;
				}
				return true;
			}

			/*
			 * "등 록" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick(e){
				
				if(chkDupl() === true){
					var clientNm = app.lookup("CLIENT_NM");
					var busiNo = app.lookup("BUSI_NO");
					var persCopTy = app.lookup("PERS_COP_TY");
					var idNo = app.lookup("ID_NO");
					var represNm = app.lookup("REPRES_NM");
					var phNo = app.lookup("PH_NO");
					var postNo = app.lookup("POST_NO");
					var addr1 = app.lookup("ADDR1");
					var addr2 = app.lookup("ADDR2");
					var addr = addr1.value + ',' + addr2.value;
					
					var submission = new cpr.protocols.Submission();
					submission.action = '/POS/clientInsert.do';
					submission.responseType = 'text';
			//		submission.async = false;
					submission.setParameters("CLIENT_NM", clientNm.value);
					submission.setParameters("BUSI_NO", busiNo.value);
					submission.setParameters("PERS_COP_TY", persCopTy.value);
					submission.setParameters("ID_NO", idNo.value);
					submission.setParameters("REPRES_NM", represNm.value);
					submission.setParameters("PH_NO", phNo.value);
					submission.setParameters("POST_NO", postNo.value);
					submission.setParameters("ADDR", addr);
					
					// EventListener 순위 
					// 1. recieve
					// 2. submit-success || submit-error
					// 3. submit-done
					submission.addEventListener("receive", function(e){
						var jsonObj = JSON.parse(e.control.xhr.responseText);
						console.log(jsonObj.EXIST.isExist);
						
						// 'does' => 등록된 사업자번호
						if(jsonObj.EXIST.isExist === 'does'){
							alert('이미 등록된 거래처입니다.');
						}	
						// 'none' => 없는 사업자 번호 => insert
						else if(jsonObj.EXIST.isExist === 'none'){
							successInsert();
						}
						debugger
					});
					submission.send();
				
				}
				
			}

			// 등록 통신 성공시 호출 함수
			function successInsert(){
				alert('거래처가 성공적으로 등록되었습니다.');
			}

			/*
			 * 라디오 버튼에서 selection-change 이벤트 발생 시 호출.
			 * 라디오버튼 아이템을 선택하여 선택된 값이 저장된 후에 발생하는 이벤트.
			 */
			function onPERS_COP_TYSelectionChange(e){
				var pERS_COP_TY = e.control;
				var idBusiOutput = app.lookup("idBusiOutput");
				var persCopTy = app.lookup("PERS_COP_TY");
				// 개인사업자일 경우
				if(persCopTy.isSelected(0)){
					idBusiOutput.value = '주민번호';
				}else{
					idBusiOutput.value = '법인번호';
				}
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("accountBtn");
			dataSet_1.parseData({
				"columns": [
					{"name": "person"},
					{"name": "value"}
				],
				"rows": [
					{"person": "개인", "value": "1"},
					{"person": "법인", "value": "2"}
				]
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("clientNo");
			dataSet_2.parseData({
				"columns": [{"name": "CLIENT_NO"}],
				"rows": []
			});
			app.register(dataSet_2);
			app.supportMedia("all", "default");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("ea1");
			cpr.core.App.load("PosHeader", function(app) {
				if(app){
					embeddedApp_1.app = app;
				}
			});
			container.addChild(embeddedApp_1, {
				"top": "0px",
				"left": "0px",
				"width": "1024px",
				"height": "80px"
			});
			
			var group_1 = new cpr.controls.Container("accountForm");
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var output_1 = new cpr.controls.Output();
				output_1.value = "거래처 번호 :";
				output_1.style.css({
					"font-weight" : "bold",
					"font-size" : "18px",
					"text-align" : "center"
				});
				container.addChild(output_1, {
					"top": "70px",
					"left": "379px",
					"width": "141px",
					"height": "40px"
				});
				var output_2 = new cpr.controls.Output("CLIENT_NO");
				output_2.readOnly = true;
				output_2.style.css({
					"color" : "black",
					"font-weight" : "bolder",
					"font-size" : "18px",
					"text-align" : "left"
				});
				container.addChild(output_2, {
					"top": "70px",
					"left": "530px",
					"width": "130px",
					"height": "40px"
				});
				var radioButton_1 = new cpr.controls.RadioButton("PERS_COP_TY");
				(function(radioButton_1){
					radioButton_1.setItemSet(app.lookup("accountBtn"), {
						"label": "person",
						"value": "value"
					})
				})(radioButton_1);
				if(typeof onPERS_COP_TYSelectionChange == "function") {
					radioButton_1.addEventListener("selection-change", onPERS_COP_TYSelectionChange);
				}
				container.addChild(radioButton_1, {
					"top": "152px",
					"left": "153px",
					"width": "200px",
					"height": "40px"
				});
				var output_3 = new cpr.controls.Output();
				output_3.value = "거래처 명";
				output_3.style.css({
					"background-color" : "#EDEDED",
					"border-radius" : "5px 0px 0px 5px",
					"text-align" : "center"
				});
				container.addChild(output_3, {
					"top": "212px",
					"left": "120px",
					"width": "103px",
					"height": "40px"
				});
				var output_4 = new cpr.controls.Output();
				output_4.value = "사업자 번호";
				output_4.style.css({
					"background-color" : "#EDEDED",
					"border-radius" : "5px 0px 0px 5px",
					"text-align" : "center"
				});
				container.addChild(output_4, {
					"top": "272px",
					"left": "120px",
					"width": "103px",
					"height": "40px"
				});
				var output_5 = new cpr.controls.Output();
				output_5.value = "대표자 성명";
				output_5.style.css({
					"background-color" : "#EDEDED",
					"border-radius" : "5px 0px 0px 5px",
					"text-align" : "center"
				});
				container.addChild(output_5, {
					"top": "332px",
					"left": "120px",
					"width": "103px",
					"height": "40px"
				});
				var output_6 = new cpr.controls.Output("idBusiOutput");
				output_6.value = "주민번호";
				output_6.style.css({
					"background-color" : "#EDEDED",
					"border-radius" : "5px 0px 0px 5px",
					"text-align" : "center"
				});
				container.addChild(output_6, {
					"top": "392px",
					"left": "120px",
					"width": "103px",
					"height": "40px"
				});
				var inputBox_1 = new cpr.controls.InputBox("CLIENT_NM");
				inputBox_1.maxLength = 14;
				inputBox_1.inputFilter = "[A-zㄱ-힣\\s]";
				inputBox_1.style.css({
					"border-radius" : "0px 5px 5px 0px"
				});
				container.addChild(inputBox_1, {
					"top": "212px",
					"left": "222px",
					"width": "200px",
					"height": "40px"
				});
				var inputBox_2 = new cpr.controls.InputBox("BUSI_NO");
				inputBox_2.placeholder = "숫자만 입력해 주세요";
				inputBox_2.maxLength = 10;
				inputBox_2.inputFilter = "[0-9]";
				inputBox_2.style.css({
					"border-radius" : "0px 5px 5px 0px"
				});
				container.addChild(inputBox_2, {
					"top": "272px",
					"left": "222px",
					"width": "200px",
					"height": "40px"
				});
				var inputBox_3 = new cpr.controls.InputBox("REPRES_NM");
				inputBox_3.maxLength = 13;
				inputBox_3.inputFilter = "[ㄱ-힣]";
				inputBox_3.style.css({
					"border-radius" : "0px 5px 5px 0px"
				});
				container.addChild(inputBox_3, {
					"top": "332px",
					"left": "222px",
					"width": "200px",
					"height": "40px"
				});
				var inputBox_4 = new cpr.controls.InputBox("ID_NO");
				inputBox_4.placeholder = "숫자만 입력해 주세요";
				inputBox_4.maxLength = 13;
				inputBox_4.inputFilter = "[0-9]";
				inputBox_4.style.css({
					"border-radius" : "0px 5px 5px 0px"
				});
				container.addChild(inputBox_4, {
					"top": "392px",
					"left": "222px",
					"width": "200px",
					"height": "40px"
				});
				var output_7 = new cpr.controls.Output();
				output_7.value = "전화번호";
				output_7.style.css({
					"background-color" : "#EDEDED",
					"border-radius" : "5px 0px 0px 5px",
					"text-align" : "center"
				});
				container.addChild(output_7, {
					"top": "212px",
					"left": "483px",
					"width": "103px",
					"height": "40px"
				});
				var output_8 = new cpr.controls.Output();
				output_8.value = "우편번호";
				output_8.style.css({
					"background-color" : "#EDEDED",
					"border-radius" : "5px 0px 0px 5px",
					"text-align" : "center"
				});
				container.addChild(output_8, {
					"top": "272px",
					"left": "483px",
					"width": "103px",
					"height": "40px"
				});
				var output_9 = new cpr.controls.Output();
				output_9.value = "주소";
				output_9.style.css({
					"background-color" : "#EDEDED",
					"border-radius" : "5px 0px 0px 5px",
					"text-align" : "center"
				});
				container.addChild(output_9, {
					"top": "332px",
					"left": "483px",
					"width": "103px",
					"height": "40px"
				});
				var output_10 = new cpr.controls.Output();
				output_10.value = "상세주소";
				output_10.style.css({
					"background-color" : "#EDEDED",
					"border-radius" : "5px 0px 0px 5px",
					"text-align" : "center"
				});
				container.addChild(output_10, {
					"top": "392px",
					"left": "483px",
					"width": "103px",
					"height": "40px"
				});
				var inputBox_5 = new cpr.controls.InputBox("PH_NO");
				inputBox_5.placeholder = "숫자만 입력해 주세요";
				inputBox_5.maxLength = 12;
				inputBox_5.inputFilter = "[0-9]";
				inputBox_5.style.css({
					"border-radius" : "0px 5px 5px 0px"
				});
				container.addChild(inputBox_5, {
					"top": "212px",
					"left": "585px",
					"width": "200px",
					"height": "40px"
				});
				var inputBox_6 = new cpr.controls.InputBox("POST_NO");
				inputBox_6.readOnly = true;
				inputBox_6.style.css({
					"border-radius" : "0px 5px 5px 0px"
				});
				container.addChild(inputBox_6, {
					"top": "272px",
					"left": "585px",
					"width": "200px",
					"height": "40px"
				});
				var inputBox_7 = new cpr.controls.InputBox("ADDR1");
				inputBox_7.readOnly = true;
				inputBox_7.style.css({
					"border-radius" : "0px 5px 5px 0px"
				});
				container.addChild(inputBox_7, {
					"top": "332px",
					"left": "585px",
					"width": "328px",
					"height": "40px"
				});
				var inputBox_8 = new cpr.controls.InputBox("ADDR2");
				inputBox_8.maxLength = 30;
				inputBox_8.inputFilter = "[A-zㄱ-힣0-9\\s]";
				inputBox_8.style.css({
					"border-radius" : "0px 5px 5px 0px"
				});
				container.addChild(inputBox_8, {
					"top": "392px",
					"left": "585px",
					"width": "328px",
					"height": "40px"
				});
				var button_1 = new cpr.controls.Button();
				button_1.value = "등 록";
				button_1.style.css({
					"font-size" : "17px"
				});
				if(typeof onButtonClick == "function") {
					button_1.addEventListener("click", onButtonClick);
				}
				container.addChild(button_1, {
					"top": "494px",
					"left": "454px",
					"width": "100px",
					"height": "40px"
				});
				var button_2 = new cpr.controls.Button("btnClick");
				button_2.value = "우편 검색";
				if(typeof onBtnClickClick == "function") {
					button_2.addEventListener("click", onBtnClickClick);
				}
				container.addChild(button_2, {
					"top": "272px",
					"left": "795px",
					"width": "118px",
					"height": "40px"
				});
				var output_11 = new cpr.controls.Output();
				output_11.enabled = false;
				output_11.value = "은 필수값입니다.";
				output_11.style.css({
					"color" : "red",
					"text-align" : "left"
				});
				container.addChild(output_11, {
					"top": "10px",
					"left": "861px",
					"width": "120px",
					"height": "20px"
				});
				var output_12 = new cpr.controls.Output();
				output_12.value = "* ";
				output_12.style.css({
					"color" : "red",
					"font-weight" : "800",
					"font-size" : "22px",
					"line-height" : "22px",
					"text-align" : "right"
				});
				container.addChild(output_12, {
					"top": "10px",
					"left": "831px",
					"width": "30px",
					"height": "20px"
				});
				var output_13 = new cpr.controls.Output();
				output_13.value = "* ";
				output_13.style.css({
					"color" : "red",
					"font-weight" : "800",
					"font-size" : "22px",
					"line-height" : "22px",
					"text-align" : "right"
				});
				container.addChild(output_13, {
					"top": "212px",
					"left": "107px",
					"width": "30px",
					"height": "20px"
				});
				var output_14 = new cpr.controls.Output();
				output_14.value = "* ";
				output_14.style.css({
					"color" : "red",
					"font-weight" : "800",
					"font-size" : "22px",
					"line-height" : "22px",
					"text-align" : "right"
				});
				container.addChild(output_14, {
					"top": "271px",
					"left": "107px",
					"width": "30px",
					"height": "20px"
				});
				var output_15 = new cpr.controls.Output();
				output_15.value = "* ";
				output_15.style.css({
					"color" : "red",
					"font-weight" : "800",
					"font-size" : "22px",
					"line-height" : "22px",
					"text-align" : "right"
				});
				container.addChild(output_15, {
					"top": "330px",
					"left": "107px",
					"width": "30px",
					"height": "20px"
				});
				var output_16 = new cpr.controls.Output();
				output_16.value = "* ";
				output_16.style.css({
					"color" : "red",
					"font-weight" : "800",
					"font-size" : "22px",
					"line-height" : "22px",
					"text-align" : "right"
				});
				container.addChild(output_16, {
					"top": "391px",
					"left": "107px",
					"width": "30px",
					"height": "20px"
				});
				var output_17 = new cpr.controls.Output();
				output_17.value = "* ";
				output_17.style.css({
					"color" : "red",
					"font-weight" : "800",
					"font-size" : "22px",
					"line-height" : "22px",
					"text-align" : "right"
				});
				container.addChild(output_17, {
					"top": "212px",
					"left": "470px",
					"width": "30px",
					"height": "20px"
				});
				var output_18 = new cpr.controls.Output();
				output_18.value = "* ";
				output_18.style.css({
					"color" : "red",
					"font-weight" : "800",
					"font-size" : "22px",
					"line-height" : "22px",
					"text-align" : "right"
				});
				container.addChild(output_18, {
					"top": "271px",
					"left": "470px",
					"width": "30px",
					"height": "20px"
				});
				var output_19 = new cpr.controls.Output();
				output_19.value = "* ";
				output_19.style.css({
					"color" : "red",
					"font-weight" : "800",
					"font-size" : "22px",
					"line-height" : "22px",
					"text-align" : "right"
				});
				container.addChild(output_19, {
					"top": "331px",
					"left": "470px",
					"width": "30px",
					"height": "20px"
				});
				var output_20 = new cpr.controls.Output();
				output_20.value = "* ";
				output_20.style.css({
					"color" : "red",
					"font-weight" : "800",
					"font-size" : "22px",
					"line-height" : "22px",
					"text-align" : "right"
				});
				container.addChild(output_20, {
					"top": "391px",
					"left": "470px",
					"width": "30px",
					"height": "20px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "150px",
				"left": "0px",
				"width": "1024px",
				"height": "598px"
			});
			
			var output_21 = new cpr.controls.Output("title");
			output_21.value = "거래처 관리";
			output_21.style.css({
				"font-weight" : "bold",
				"font-size" : "25px",
				"text-align" : "center"
			});
			container.addChild(output_21, {
				"top": "90px",
				"left": "353px",
				"width": "318px",
				"height": "50px"
			});
			if(typeof onBodyInit2 == "function"){
				app.addEventListener("init", onBodyInit2);
			}
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "PosAccountManagement";
	cpr.core.Platform.INSTANCE.register(app);
})();
